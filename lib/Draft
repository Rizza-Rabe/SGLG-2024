SingleChildScrollView(
            child: Center(
                child: SizedBox(
                    width: 700,
                    child: (_indicators.isEmpty) ? const Align(
                      alignment: Alignment.center,
                      child: Text(
                        "No indicators yet. Check back later",
                        style: TextStyle(
                            fontSize: 20,
                            color: Colors.grey
                        ),
                      ),
                    ): ListView.builder(
                      shrinkWrap: true,
                      itemCount: _governanceArea.length,
                      itemBuilder: (context, index){
                        return Container(
                          margin: const EdgeInsets.only(left: 3, right: 3, top: 1, bottom: 1),
                          child: Container(
                            margin: const EdgeInsets.all(10),
                            decoration: BoxDecoration(
                                color: Colors.white,
                                border: Border.all(
                                    color: Colors.black,
                                    width: 1.0
                                ),
                                borderRadius: BorderRadius.circular(10)
                            ),
                            child: Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Align(
                                    alignment: Alignment.centerLeft,
                                    child: Padding(
                                        padding: const EdgeInsets.only(left: 20, right: 20, top: 15),
                                        child: Center(
                                          child: Text(
                                            _governanceArea[index]["title"].toString(),
                                            style: const TextStyle(
                                                fontWeight: FontWeight.bold,
                                                fontSize: 25
                                            ),
                                          ),
                                        )
                                    )
                                ),

                                Align(
                                    alignment: Alignment.centerLeft,
                                    child: Center(
                                      child: Text(
                                        "ID: ${_governanceArea[index]["id"].toString()}",
                                        style: const TextStyle(
                                          color: Colors.grey,
                                          fontSize: 14,
                                        ),
                                      ),
                                    )
                                ),

                                const SizedBox(
                                  height: 10,
                                ),

                                ListView.builder(
                                  shrinkWrap: true,
                                  itemCount: _indicators.length,
                                  itemBuilder: (context, index2){

                                    _answerList.clear();
                                    for(int a = 0; a < _indicators.length; a++){
                                      HashMap<dynamic, dynamic> data = HashMap();
                                      data["indicatorId"] = _indicators[a]["id"].toString();
                                      data["indicatorTitle"] = _indicators[a]["title"].toString();
                                      data["governanceArea"] = _governanceArea[index]["title"].toString();
                                      data["governanceAreaId"] = _governanceArea[index]["id"].toString();
                                      data["indicatorAnswer"] = "N/A";
                                      _answerList.insert(a, data);
                                    }

                                    final subIndicatorList = _indicators[index2]["dataInputMethod"] as Map<dynamic, dynamic>;
                                    _conditionals = subIndicatorList["type"].toString();
                                    List<dynamic> checkBoxTitles = [];
                                    List<dynamic> radioButtonTitle = [];

                                    if(_conditionals == "check_box"){
                                      Utility().printLog("Value: ${subIndicatorList["value"].toString()}");
                                      checkBoxTitles = jsonDecode(subIndicatorList["value"].toString());
                                      Utility().printLog("Check box title: ${checkBoxTitles.length}");
                                    }

                                    if(_conditionals == "radio_button"){
                                      Utility().printLog("Value: ${subIndicatorList["value"].toString()}");
                                      radioButtonTitle = jsonDecode(subIndicatorList["value"].toString());
                                      Utility().printLog("Radio button title: ${radioButtonTitle.length}");
                                    }

                                    String radioButtonValue = "none";
                                    var textFieldInputTextController = TextEditingController();
                                    List<dynamic> checkBoxTicked = List<dynamic>() = [];

                                    return Container(
                                        margin: const EdgeInsets.only(left: 3, right: 3, top: 1, bottom: 1),
                                        child: Container(
                                          margin: const EdgeInsets.only(left: 20, right: 20, top: 10, bottom: 10),
                                          decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(10),
                                              color: Colors.grey[200]
                                          ),
                                          child: ListTile(
                                              title: Container(
                                                  padding: const EdgeInsets.all(3),
                                                  child: Text(
                                                    _indicators[index2]["title"].toString(),
                                                    style: const TextStyle(
                                                        fontSize: 18,
                                                        fontWeight: FontWeight.bold
                                                    ),
                                                  )
                                              ),

                                              subtitle: Padding(
                                                padding: const EdgeInsets.all(3),
                                                child: Column(
                                                  mainAxisSize: MainAxisSize.min,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      _indicators[index2]["id"].toString(),
                                                      style: const TextStyle(
                                                        fontSize: 12,
                                                      ),
                                                    ),

                                                    const SizedBox(
                                                      height: 20,
                                                    ),

                                                    _conditionals == "numMin%" ?
                                                    TextFormField(
                                                      textInputAction: TextInputAction.next,
                                                      maxLines: 1,
                                                      autofocus: false,
                                                      controller: textFieldInputTextController,
                                                      decoration: const InputDecoration(
                                                          labelStyle: TextStyle(color: Colors.black),
                                                          focusColor: Colors.black,
                                                          hintStyle: TextStyle(color: Colors.black),
                                                          focusedBorder: OutlineInputBorder(
                                                              borderSide: BorderSide(color: Colors.black)
                                                          ),
                                                          labelText: 'Enter here',
                                                          border: OutlineInputBorder()
                                                      ),

                                                      autovalidateMode: AutovalidateMode.onUserInteraction,
                                                      onChanged: (text){
                                                        if(text.isNotEmpty){
                                                          _answerList[index2]["indicatorAnswer"] = text;
                                                        }else {
                                                          _answerList[index2]["indicatorAnswer"] = "N/A";
                                                        }

                                                        Utility().printLog("Answer: $_answerList");
                                                      },
                                                    ): _conditionals == "radio_button" ?
                                                    StatefulBuilder(
                                                      builder: (statefulContext, statefulSetState){
                                                        return ListView.builder(
                                                          shrinkWrap: true,
                                                          itemCount: radioButtonTitle.length,
                                                          itemBuilder: (context, radioIndex){
                                                            return RadioListTile<String>(
                                                              title: Text(radioButtonTitle[radioIndex]["title"].toString()),
                                                              value: radioButtonTitle[radioIndex]["title"].toString(),
                                                              groupValue: radioButtonValue,
                                                              onChanged: (value) {
                                                                radioButtonValue = value!;
                                                                _answerList[index2]["indicatorAnswer"] = value;
                                                                Utility().printLog("Answer: $_answerList");
                                                                Utility().printLog("Radio button value: $radioButtonValue");
                                                                statefulSetState(() {});
                                                              },
                                                            );
                                                          },
                                                        );
                                                      },
                                                    ): _conditionals == "check_box" ?
                                                    ListView.builder(
                                                      shrinkWrap: true,
                                                      itemCount: checkBoxTitles.length,
                                                      itemBuilder: (context, checkBoxIndex){
                                                        bool checkBoxValue = false;

                                                        return StatefulBuilder(
                                                          builder: (statefulContext, statefulSetState){
                                                            return CheckboxListTile(
                                                              title: Text(checkBoxTitles[checkBoxIndex]["title"]),
                                                              value: checkBoxValue,
                                                              onChanged: (bool? value) {
                                                                checkBoxValue = value!;
                                                                if(value == false){
                                                                  checkBoxTicked.remove(checkBoxTitles[checkBoxIndex]["title"]);
                                                                }else {
                                                                  checkBoxTicked.add(checkBoxTitles[checkBoxIndex]["title"]);
                                                                }
                                                                String decodedCheckBoxAnswer = jsonEncode(checkBoxTicked);
                                                                if(checkBoxTicked.isEmpty){
                                                                  _answerList[index2]["indicatorAnswer"] = "N/A";
                                                                }else {
                                                                  _answerList[index2]["indicatorAnswer"] = decodedCheckBoxAnswer;
                                                                }

                                                                Utility().printLog("Answer: $_answerList");
                                                                statefulSetState(() {});
                                                              },
                                                            );
                                                          },
                                                        );
                                                      },
                                                    ): _conditionals == "date" ?
                                                    const Text(
                                                        "Date picker"
                                                    ): _conditionals == "upload" ?
                                                    const Text(
                                                        "Upload button"
                                                    ): const Text(
                                                        "Rating Bar"
                                                    ),
                                                  ],
                                                ),
                                              )
                                          ),
                                        )
                                    );
                                  },
                                ),
                              ],
                            ),
                          ),
                        );
                      },
                    )
                )
            ),
          )

          ================================================== MARCH 18 ================================================
          body: SingleChildScrollView(
                      child: Center(
                        child: Container(
                          margin: const EdgeInsets.only(top: 15, bottom: 15),
                          width: 700,
                          child: Card(
                            color: Colors.white,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(10.0), // Adjust the border radius as needed
                              side: const BorderSide(
                                color: Colors.black, // Set border color
                                width: 1.0,         // Set border width
                              ),
                            ),
                            child: Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                ListView.builder(
                                  shrinkWrap: true,
                                  itemCount: _indicators.length,
                                  itemBuilder: (context, index2){

                                    _indicatorAnswers.clear();
                                    for(int a = 0; a < _indicators.length; a++){
                                      HashMap<dynamic, dynamic> data = HashMap();
                                      data["indicatorId"] = _indicators[a]["id"].toString();
                                      data["indicatorTitle"] = _indicators[a]["title"].toString();
                                      data["governanceArea"] = widget.formTitle;
                                      data["governanceAreaId"] = widget.fieldPushKey;
                                      data["indicatorAnswer"] = "N/A";
                                      _indicatorAnswers.insert(a, data);
                                    }

                                    Utility().printLog("Indicators DATA: ${_indicators[index2]["dataInputMethod"]}");
                                    Map<dynamic, dynamic> data = _indicators[index2]["dataInputMethod"] as Map<dynamic, dynamic>;
                                    Utility().printLog("VALUE: ${data["value"]}");
                                    _conditionals = data["type"];
                                    List<dynamic> checkBoxTitles = [];
                                    List<dynamic> radioButtonTitle = [];

                                    if(_conditionals == "check_box" && data["value"] != null){
                                      Utility().printLog("Value: ${data["value"].toString()}");
                                      checkBoxTitles = jsonDecode(data["value"].toString());
                                      Utility().printLog("Check box title: ${checkBoxTitles.length}");
                                    }

                                    if(_conditionals == "radio_button" && data["value"] != null){
                                      Utility().printLog("Value: ${data["value"].toString()}");
                                      radioButtonTitle = jsonDecode(data["value"].toString());
                                      Utility().printLog("Radio button title: ${radioButtonTitle.length}");
                                    }

                                    String radioButtonValue = "none";
                                    String? selectedDate = "Tap to select date";
                                    var textFieldInputTextController = TextEditingController();
                                    List<dynamic> checkBoxTicked = List<dynamic>() = [];

                                    return Container(
                                        margin: const EdgeInsets.only(left: 3, right: 3, top: 1, bottom: 1),
                                        child: Container(
                                          margin: const EdgeInsets.only(left: 20, right: 20, top: 10, bottom: 10),
                                          decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(10),
                                              color: Colors.grey[200]
                                          ),
                                          child: ListTile(
                                              title: Container(
                                                  padding: const EdgeInsets.all(3),
                                                  child: Text(
                                                    _indicators[index2]["title"].toString(),
                                                    style: const TextStyle(
                                                        fontSize: 18,
                                                        fontWeight: FontWeight.bold
                                                    ),
                                                  )
                                              ),

                                              subtitle: Padding(
                                                padding: const EdgeInsets.all(3),
                                                child: Column(
                                                  mainAxisSize: MainAxisSize.min,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      _indicators[index2]["id"].toString(),
                                                      style: const TextStyle(
                                                        fontSize: 12,
                                                      ),
                                                    ),

                                                    const SizedBox(
                                                      height: 20,
                                                    ),

                                                    _conditionals == "numMin%" ?
                                                    Column(
                                                      mainAxisSize: MainAxisSize.min,
                                                      children: [
                                                        TextFormField(
                                                          textInputAction: TextInputAction.next,
                                                          maxLines: 1,
                                                          autofocus: false,
                                                          controller: textFieldInputTextController,
                                                          decoration: const InputDecoration(
                                                              labelStyle: TextStyle(color: Colors.black),
                                                              focusColor: Colors.black,
                                                              hintStyle: TextStyle(color: Colors.black),
                                                              focusedBorder: OutlineInputBorder(
                                                                  borderSide: BorderSide(color: Colors.black)
                                                              ),
                                                              labelText: 'Enter here',
                                                              border: OutlineInputBorder()
                                                          ),

                                                          autovalidateMode: AutovalidateMode.onUserInteraction,
                                                          onChanged: (text){
                                                            if(text.isNotEmpty){
                                                              _indicatorAnswers[index2]["indicatorAnswer"] = text;
                                                            }else {
                                                              _indicatorAnswers[index2]["indicatorAnswer"] = "N/A";
                                                            }

                                                            Utility().printLog("Answer: $_indicatorAnswers");
                                                          },
                                                        ),

                                                        const SizedBox(
                                                          height: 10,
                                                        ),

                                                        Align(
                                                          alignment: Alignment.centerRight,
                                                          child: InkWell(
                                                              onTap: () async {

                                                              },

                                                              splashColor: Colors.blue,
                                                              child: Padding(
                                                                padding: const EdgeInsets.all(8),
                                                                child: Row(
                                                                  mainAxisSize: MainAxisSize.min,
                                                                  children: [
                                                                    Image.asset(
                                                                      "assets/upload.png",
                                                                      width: 20,
                                                                      height: 20,
                                                                    ),

                                                                    const SizedBox(
                                                                      width: 10,
                                                                    ),

                                                                    const Text(
                                                                      "Upload MOV file",
                                                                      style: TextStyle(
                                                                          fontWeight: FontWeight.bold,
                                                                          fontSize: 14
                                                                      ),
                                                                    )
                                                                  ],
                                                                ),
                                                              )
                                                          ),
                                                        )
                                                      ],
                                                    ): _conditionals == "radio_button" ?
                                                    Column(
                                                      mainAxisSize: MainAxisSize.min,
                                                      children: [
                                                        StatefulBuilder(
                                                          builder: (statefulContext, statefulSetState){
                                                            return ListView.builder(
                                                              shrinkWrap: true,
                                                              itemCount: radioButtonTitle.length,
                                                              itemBuilder: (context, radioIndex){
                                                                return RadioListTile<String>(
                                                                  title: Text(radioButtonTitle[radioIndex].toString()),
                                                                  value: radioButtonTitle[radioIndex].toString(),
                                                                  groupValue: radioButtonValue,
                                                                  onChanged: (value) {
                                                                    radioButtonValue = value!;
                                                                    _indicatorAnswers[index2]["indicatorAnswer"] = value;
                                                                    Utility().printLog("Answer: $_indicatorAnswers");
                                                                    Utility().printLog("Radio button value: $radioButtonValue");
                                                                    statefulSetState(() {});
                                                                  },
                                                                );
                                                              },
                                                            );
                                                          },
                                                        ),

                                                        const SizedBox(
                                                          height: 10,
                                                        ),

                                                        Align(
                                                          alignment: Alignment.centerRight,
                                                          child: InkWell(
                                                              onTap: () async {

                                                              },

                                                              splashColor: Colors.blue,
                                                              child: Padding(
                                                                padding: const EdgeInsets.all(8),
                                                                child: Row(
                                                                  mainAxisSize: MainAxisSize.min,
                                                                  children: [
                                                                    Image.asset(
                                                                      "assets/upload.png",
                                                                      width: 20,
                                                                      height: 20,
                                                                    ),

                                                                    const SizedBox(
                                                                      width: 10,
                                                                    ),

                                                                    const Text(
                                                                      "Upload MOV file",
                                                                      style: TextStyle(
                                                                          fontWeight: FontWeight.bold,
                                                                          fontSize: 14
                                                                      ),
                                                                    )
                                                                  ],
                                                                ),
                                                              )
                                                          ),
                                                        )
                                                      ],
                                                    ): _conditionals == "check_box" ?
                                                    Column(
                                                      mainAxisSize: MainAxisSize.min,
                                                      children: [
                                                        ListView.builder(
                                                          shrinkWrap: true,
                                                          itemCount: checkBoxTitles.length,
                                                          itemBuilder: (context, checkBoxIndex){
                                                            bool checkBoxValue = false;

                                                            return Padding(
                                                              padding: const EdgeInsets.all(8),
                                                              child: StatefulBuilder(
                                                                builder: (statefulContext, statefulSetState){
                                                                  return InkWell(
                                                                    onTap: (){
                                                                      if(checkBoxValue == false){
                                                                        checkBoxTicked.add(checkBoxTitles[checkBoxIndex]);
                                                                        checkBoxValue = true;
                                                                      }else {
                                                                        checkBoxTicked.remove(checkBoxTitles[checkBoxIndex]);
                                                                        checkBoxValue = false;
                                                                      }
                                                                      String decodedCheckBoxAnswer = jsonEncode(checkBoxTicked);
                                                                      if(checkBoxTicked.isEmpty){
                                                                        _indicatorAnswers[index2]["indicatorAnswer"] = "N/A";
                                                                      }else {
                                                                        _indicatorAnswers[index2]["indicatorAnswer"] = decodedCheckBoxAnswer;
                                                                      }

                                                                      Utility().printLog("Answer: $_indicatorAnswers");
                                                                      statefulSetState(() {});
                                                                    },

                                                                    child: Row(
                                                                      mainAxisSize: MainAxisSize.min,
                                                                      children: [
                                                                        Checkbox(
                                                                            value: checkBoxValue,
                                                                            onChanged: (value){
                                                                              checkBoxValue = value!;
                                                                              if(value == false){
                                                                                checkBoxTicked.remove(checkBoxTitles[checkBoxIndex]);
                                                                              }else {
                                                                                checkBoxTicked.add(checkBoxTitles[checkBoxIndex]);
                                                                              }
                                                                              String decodedCheckBoxAnswer = jsonEncode(checkBoxTicked);
                                                                              if(checkBoxTicked.isEmpty){
                                                                                _indicatorAnswers[index2]["indicatorAnswer"] = "N/A";
                                                                              }else {
                                                                                _indicatorAnswers[index2]["indicatorAnswer"] = decodedCheckBoxAnswer;
                                                                              }

                                                                              Utility().printLog("Answer: $_indicatorAnswers");
                                                                              statefulSetState(() {});
                                                                            }
                                                                        ),

                                                                        const SizedBox(
                                                                          width: 10,
                                                                        ),

                                                                        Text(
                                                                            checkBoxTitles[checkBoxIndex]
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),

                                                        const SizedBox(
                                                          height: 10,
                                                        ),

                                                        Align(
                                                          alignment: Alignment.centerRight,
                                                          child: InkWell(
                                                              onTap: () async {

                                                              },

                                                              splashColor: Colors.blue,
                                                              child: Padding(
                                                                padding: const EdgeInsets.all(8),
                                                                child: Row(
                                                                  mainAxisSize: MainAxisSize.min,
                                                                  children: [
                                                                    Image.asset(
                                                                      "assets/upload.png",
                                                                      width: 20,
                                                                      height: 20,
                                                                    ),

                                                                    const SizedBox(
                                                                      width: 10,
                                                                    ),

                                                                    const Text(
                                                                      "Upload MOV file",
                                                                      style: TextStyle(
                                                                          fontWeight: FontWeight.bold,
                                                                          fontSize: 14
                                                                      ),
                                                                    )
                                                                  ],
                                                                ),
                                                              )
                                                          ),
                                                        )
                                                      ],
                                                    ): _conditionals == "date" ?
                                                    StatefulBuilder(
                                                      builder: (stateContext, statefulSetState){
                                                        return InkWell(
                                                          onTap: () async {
                                                            selectedDate = await TimeAndDate().showDatePickerDialog(context);
                                                            Utility().printLog("Selected date: $selectedDate");
                                                            if(selectedDate == null){
                                                              _indicatorAnswers[index2]["indicatorAnswer"] = "N/A";
                                                            }else {
                                                              _indicatorAnswers[index2]["indicatorAnswer"] = selectedDate;
                                                            }

                                                            statefulSetState((){
                                                              Utility().printLog("Trigger!");
                                                            });
                                                          },

                                                          splashColor: Colors.blue,
                                                          child: Row(
                                                            mainAxisSize: MainAxisSize.min,
                                                            children: [
                                                              Image.asset(
                                                                "assets/calendar.png",
                                                                width: 20,
                                                                height: 20,
                                                              ),

                                                              const SizedBox(
                                                                width: 10,
                                                              ),

                                                              Text(
                                                                selectedDate == null ? "Tap to select date" : selectedDate!,
                                                                style: const TextStyle(
                                                                    fontWeight: FontWeight.bold,
                                                                    fontSize: 14
                                                                ),
                                                              )
                                                            ],
                                                          ),
                                                        );
                                                      },
                                                    ): _conditionals == "upload_button" ?
                                                    StatefulBuilder(
                                                      builder: (stateContext, statefulSetState){
                                                        return InkWell(
                                                          onTap: () async {

                                                          },

                                                          splashColor: Colors.blue,
                                                          child: Row(
                                                            mainAxisSize: MainAxisSize.min,
                                                            children: [
                                                              Image.asset(
                                                                "assets/upload.png",
                                                                width: 20,
                                                                height: 20,
                                                              ),

                                                              const SizedBox(
                                                                width: 10,
                                                              ),

                                                              const Text(
                                                                "Upload Files",
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.bold,
                                                                    fontSize: 14
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        );
                                                      },
                                                    ): const Text(
                                                        "Rating Bar"
                                                    ),
                                                  ],
                                                ),
                                              )
                                          ),
                                        )
                                    );
                                  },
                                ),

                                const SizedBox(
                                  height: 15,
                                ),

                                Align(
                                  alignment: Alignment.centerRight,
                                  child: Padding(
                                    padding: const EdgeInsets.all(10),
                                    child: Row(
                                      mainAxisSize: MainAxisSize.min,
                                      children: [
                                        TextButton(
                                            onPressed: (){

                                            },

                                            style: ButtonStyle(
                                              textStyle: const MaterialStatePropertyAll(
                                                  TextStyle(
                                                      fontSize: 16
                                                  )
                                              ),
                                              minimumSize: MaterialStateProperty.all(
                                                  const Size(100, 45)
                                              ),
                                              overlayColor: MaterialStateProperty.resolveWith<Color>(
                                                    (Set<MaterialState> states) {
                                                  return Colors.white24;
                                                },
                                              ),
                                              backgroundColor: MaterialStateProperty.all(Colors.grey),
                                              shape: MaterialStateProperty.all(
                                                RoundedRectangleBorder(
                                                  borderRadius: BorderRadius.circular(8.0),
                                                ),
                                              ),
                                            ),
                                            child: const Text(
                                              "Save as Draft",
                                              style: TextStyle(
                                                  color: Colors.white
                                              ),
                                            )
                                        ),

                                        const SizedBox(
                                          width: 15,
                                        ),

                                        TextButton(
                                            onPressed: (){
                                              _classicDialog.setTitle("Submit Form?");
                                              _classicDialog.setMessage("Are you sure you want to submit the form? Please double check before submitting.");
                                              _classicDialog.setCancelable(false);
                                              _classicDialog.setPositiveButtonTitle("Submit");
                                              _classicDialog.setNegativeButtonTitle("Cancel");
                                              _classicDialog.showTwoButtonDialogWithFunc(context, (positiveClicked) {

                                              }, (negativeClicked) {

                                              });
                                            },
                                            style: ButtonStyle(
                                              textStyle: const MaterialStatePropertyAll(
                                                  TextStyle(
                                                      fontSize: 16
                                                  )
                                              ),
                                              minimumSize: MaterialStateProperty.all(
                                                  const Size(100, 45)
                                              ),
                                              overlayColor: MaterialStateProperty.resolveWith<Color>(
                                                    (Set<MaterialState> states) {
                                                  return Colors.white24;
                                                },
                                              ),
                                              backgroundColor: MaterialStateProperty.all(Colors.blue),
                                              shape: MaterialStateProperty.all(
                                                RoundedRectangleBorder(
                                                  borderRadius: BorderRadius.circular(8.0),
                                                ),
                                              ),
                                            ),
                                            child: const Text(
                                              "Submit Now",
                                              style: TextStyle(
                                                  color: Colors.white
                                              ),
                                            )
                                        ),
                                      ],
                                    ),
                                  )
                                ),
                              ],
                            )
                          ),
                        ),
                      ),
                    )

                    ==================================================================

dataInputMethodType == "check_box" ?
                                          Column(
                                            mainAxisSize: MainAxisSize.min,
                                            children: [
                                              ListView.builder(
                                                shrinkWrap: true,
                                                itemCount: checkBoxTitles.length,
                                                itemBuilder: (context, checkBoxIndex){
                                                  bool checkBoxValue = false;

                                                  return Padding(
                                                    padding: const EdgeInsets.all(8),
                                                    child: StatefulBuilder(
                                                      builder: (statefulContext, statefulSetState){
                                                        return InkWell(
                                                          onTap: (){

                                                          },

                                                          child: Row(
                                                            mainAxisSize: MainAxisSize.min,
                                                            children: [
                                                              Checkbox(
                                                                  value: checkBoxValue,
                                                                  onChanged: (value){
                                                                    checkBoxValue = value!;
                                                                  }
                                                              ),

                                                              const SizedBox(
                                                                width: 10,
                                                              ),

                                                              Flexible(
                                                                child: Text(
                                                                    checkBoxTitles[checkBoxIndex]["title"].toString()
                                                                ),
                                                              )
                                                            ],
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                  );
                                                },
                                              ),

                                              const SizedBox(
                                                height: 10,
                                              ),

                                              Align(
                                                alignment: Alignment.centerRight,
                                                child: InkWell(
                                                    onTap: () async {

                                                    },

                                                    splashColor: Colors.blue,
                                                    child: Padding(
                                                      padding: const EdgeInsets.all(8),
                                                      child: Row(
                                                        mainAxisSize: MainAxisSize.min,
                                                        children: [
                                                          Image.asset(
                                                            "assets/upload.png",
                                                            width: 20,
                                                            height: 20,
                                                          ),

                                                          const SizedBox(
                                                            width: 10,
                                                          ),

                                                          const Text(
                                                            "Upload MOV file",
                                                            style: TextStyle(
                                                                fontWeight: FontWeight.bold,
                                                                fontSize: 14
                                                            ),
                                                          )
                                                        ],
                                                      ),
                                                    )
                                                ),
                                              )
                                            ],
                                          ) : _indicatorWidgetType == null || hasSubIndicator ?
                                          Container(
                                            decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(5),
                                              color: Colors.blue[100]
                                            ),
                                            padding: const EdgeInsets.all(5),
                                            child: ListView.builder(
                                              shrinkWrap: true,
                                              itemCount: innerSubIndicators.length,
                                              itemBuilder: (context, innerSubIndicatorIndex){
                                                final numAndStrInputField = TextEditingController();

                                                List<String> subIndicatorTypeSettings = [];
                                                List<dynamic> subIndicatorRadioButton = [];
                                                List<dynamic> subIndicatorCheckBoxButton = [];

                                                String innerSubIndicatorType = innerSubIndicators[innerSubIndicatorIndex]["dataInputMethod"]["type"];
                                                String innerSubIndicatorValue = innerSubIndicators[innerSubIndicatorIndex]["dataInputMethod"]["value"];
                                                if(innerSubIndicatorType.startsWith("num") || innerSubIndicatorType.startsWith("str")){
                                                  subIndicatorTypeSettings = innerSubIndicatorType.split(":");
                                                }

                                                if(innerSubIndicatorType == "radio_button"){
                                                  Map<dynamic, dynamic> map = innerSubIndicatorValue as Map<dynamic, dynamic>;
                                                  map.forEach((key, value) async {
                                                    subIndicatorRadioButton.add(value);
                                                  });
                                                  Utility().printLog("Sub-indicator radio button list found: ${subIndicatorRadioButton.length}");
                                                }
                                                if(innerSubIndicatorType == "check_box"){
                                                  Map<dynamic, dynamic> map = innerSubIndicatorValue as Map<dynamic, dynamic>;
                                                  map.forEach((key, value) async {
                                                    subIndicatorCheckBoxButton.add(value);
                                                  });
                                                  Utility().printLog("Sub-indicator check button list found: ${subIndicatorCheckBoxButton.length}");
                                                }

                                                Utility().printLog("Inner sub-indicator type: $innerSubIndicatorType");
                                                Utility().printLog("Inner sub-indicator value: $innerSubIndicatorValue");

                                                return Padding(
                                                  padding: const EdgeInsets.all(8),
                                                  child: StatefulBuilder(
                                                    builder: (innerSubIndicatorContext, innerSubIndicatorSetState){
                                                      String radioValue = "";

                                                      return Column(
                                                        mainAxisSize: MainAxisSize.min,
                                                        children: [
                                                          Align(
                                                            alignment: Alignment.centerLeft,
                                                            child: Text(
                                                              innerSubIndicators[innerSubIndicatorIndex]["query"].toString(),
                                                              style: const TextStyle(
                                                                  fontSize: 14,
                                                                  fontWeight: FontWeight.bold
                                                              ),
                                                            ),
                                                          ),

                                                          const SizedBox(
                                                            height: 15,
                                                          ),

                                                          innerSubIndicatorType.startsWith("num") || innerSubIndicatorType.startsWith("str") ?
                                                          TextFormField(
                                                            textInputAction: TextInputAction.next,
                                                            maxLines: 1,
                                                            autofocus: false,
                                                            controller: numAndStrInputField,
                                                            inputFormatters: [
                                                              FilteringTextInputFormatter.allow(RegExp(r'^\d+\.?\d{0,10}')),
                                                            ],
                                                            keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                            decoration: const InputDecoration(
                                                                labelStyle: TextStyle(color: Colors.black),
                                                                focusColor: Colors.black,
                                                                hintStyle: TextStyle(color: Colors.black),
                                                                focusedBorder: OutlineInputBorder(
                                                                    borderSide: BorderSide(color: Colors.black)
                                                                ),
                                                                labelText: 'Enter here',
                                                                border: OutlineInputBorder()
                                                            ),

                                                            autovalidateMode: AutovalidateMode.onUserInteraction,
                                                            onChanged: (text){

                                                            },
                                                          ): innerSubIndicatorType == "check_box" ?
                                                          StatefulBuilder(
                                                            builder: (statefulContext, setState){
                                                              return ListView.builder(
                                                                shrinkWrap: true,
                                                                itemCount: subIndicatorRadioButton.length,
                                                                itemBuilder: (context, radioIndex){
                                                                  return RadioListTile<String>(
                                                                    title: Text(subIndicatorRadioButton[radioIndex].toString()),
                                                                    value: subIndicatorRadioButton[radioIndex]["title"].toString(),
                                                                    groupValue: radioValue,
                                                                    onChanged: (value) {
                                                                      radioValue = value!;
                                                                      setState(() {});
                                                                    },
                                                                  );
                                                                },
                                                              );
                                                            },
                                                          ): const Text("No widget"),
                                                        ],
                                                      );
                                                    },
                                                  ),
                                                );
                                              },
                                            ),
                                          ) :
                                          const Text(
                                            "No Widget to render yet"
                                          )